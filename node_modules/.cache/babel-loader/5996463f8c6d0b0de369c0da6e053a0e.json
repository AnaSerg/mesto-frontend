{"ast":null,"code":"class Api {\n  constructor(_ref, cardId) {\n    let {\n      baseUrl,\n      headers\n    } = _ref;\n    this._baseUrl = baseUrl;\n    this._headers = headers;\n    this._cardId = cardId;\n  }\n\n  _handleResponse(res) {\n    if (res.ok) {\n      return res.json();\n    } else {\n      Promise.reject(`Ошибка: ${res.status}`);\n    }\n  }\n\n  getInitialCards() {\n    return fetch(`${this._baseUrl}/cards`, {\n      method: 'GET',\n      headers: this._headers\n    }).then(this._handleResponse);\n  }\n\n  getUserInfo() {\n    return fetch(`${this._baseUrl}/users/me`, {\n      method: 'GET',\n      headers: this._headers\n    }).then(this._handleResponse);\n  }\n\n  sendUserInfo(data) {\n    return fetch(`${this._baseUrl}/users/me`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: data.name,\n        about: data.about\n      })\n    }).then(this._handleResponse);\n  }\n\n  sendNewCard(data) {\n    return fetch(`${this._baseUrl}/cards`, {\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: data.name,\n        link: data.link\n      })\n    }).then(this._handleResponse);\n  }\n\n  deleteCard(id) {\n    return fetch(`${this._baseUrl}/cards/${id}`, {\n      method: 'DELETE',\n      headers: this._headers\n    }).then(this._handleResponse);\n  }\n\n  addLike(id) {\n    return fetch(`${this._baseUrl}/cards/${id}/likes`, {\n      method: 'PUT',\n      headers: this._headers\n    }).then(this._handleResponse);\n  }\n\n  deleteLike(id) {\n    return fetch(`${this._baseUrl}/cards/${id}/likes`, {\n      method: 'DELETE',\n      headers: this._headers\n    }).then(this._handleResponse);\n  }\n\n  sendAvatarInfo(data) {\n    return fetch(`${this._baseUrl}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: data.avatar\n      })\n    }).then(this._handleResponse);\n  }\n\n}\n\nexport const api = new Api({\n  baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-49',\n  headers: {\n    authorization: '2cee6aa2-b4a3-48c5-9c04-a35e285f1434',\n    'Content-Type': 'application/json'\n  }\n});","map":{"version":3,"names":["Api","constructor","cardId","baseUrl","headers","_baseUrl","_headers","_cardId","_handleResponse","res","ok","json","Promise","reject","status","getInitialCards","fetch","method","then","getUserInfo","sendUserInfo","data","body","JSON","stringify","name","about","sendNewCard","link","deleteCard","id","addLike","deleteLike","sendAvatarInfo","avatar","api","authorization"],"sources":["/Users/anastasiasergeeva/Desktop/Яндекс.Практикум/mesto-react/mesto/src/utils/api.js"],"sourcesContent":["class Api {\n    constructor({ baseUrl, headers }, cardId) {\n      this._baseUrl = baseUrl;\n      this._headers = headers;\n      this._cardId = cardId;\n    }\n\n    _handleResponse(res) {\n        if (res.ok) {\n            return res.json();\n        } else {\n            Promise.reject(`Ошибка: ${res.status}`);\n        }\n    }\n\n    getInitialCards() {\n        return fetch(`${this._baseUrl}/cards`, {\n            method: 'GET',\n            headers: this._headers,\n        })\n        .then(this._handleResponse);\n    }\n\n    getUserInfo() {\n        return fetch(`${this._baseUrl}/users/me`, {\n            method: 'GET',\n            headers: this._headers,\n        })\n        .then(this._handleResponse);\n    }\n\n    sendUserInfo(data) {\n        return fetch(`${this._baseUrl}/users/me`, {\n            method: 'PATCH',\n            headers: this._headers,\n            body: JSON.stringify({\n                name: data.name,\n                about: data.about,\n            })\n        })\n        .then(this._handleResponse);\n    }\n\n    sendNewCard(data) {\n        return fetch(`${this._baseUrl}/cards`, {\n            method: 'POST',\n            headers: this._headers,\n            body: JSON.stringify({\n                name: data.name,\n                link: data.link,\n            })\n        })\n        .then(this._handleResponse);\n    }\n\n    deleteCard(id) {\n        return fetch(`${this._baseUrl}/cards/${id}`, {\n            method: 'DELETE',\n            headers: this._headers,\n        })\n        .then(this._handleResponse);\n    }\n\n    addLike(id) {\n        return fetch(`${this._baseUrl}/cards/${id}/likes`, {\n            method: 'PUT',\n            headers: this._headers,\n        })\n        .then(this._handleResponse);\n    }\n\n    deleteLike(id) {\n        return fetch(`${this._baseUrl}/cards/${id}/likes`, {\n            method: 'DELETE',\n            headers: this._headers,\n        })\n        .then(this._handleResponse);\n    }\n\n    sendAvatarInfo(data) {\n        return fetch(`${this._baseUrl}/users/me/avatar`, {\n            method: 'PATCH',\n            headers: this._headers,\n            body: JSON.stringify({\n                avatar: data.avatar\n            })\n        })\n        .then(this._handleResponse);\n    }\n}\n\nexport const api = new Api ({\n    baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-49',\n    headers: {\n      authorization: '2cee6aa2-b4a3-48c5-9c04-a35e285f1434',\n      'Content-Type': 'application/json'\n    }\n})"],"mappings":"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"},"metadata":{},"sourceType":"module"}